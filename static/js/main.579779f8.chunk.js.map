{"version":3,"sources":["components/Button.js","pages/Employees.js","utils/API.js","App.js","index.js"],"names":["Button","props","onClick","name","Employees","state","employeeList","onSortByName","newState","employeeNames","map","emp","first","sort","sortedEmployees","i","length","console","log","setState","onFilterByCountry","USEmployees","filter","employee","location","country","axios","get","then","res","data","results","this","index","className","last","src","picture","large","alt","city","email","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAYeA,MAVf,SAAgBC,GACd,OACE,mCACE,wBAAQC,QAASD,EAAMC,QAAvB,SACGD,EAAME,U,qBC+EAC,E,4MAhFbC,MAAQ,CACNC,aAAe,I,EASjBC,aAAe,WAGb,IAAMC,EAAQ,eAAO,EAAKH,OAEpBI,EAAgBD,EAASF,aAAaI,KAAI,SAACC,GAAQ,OAAOA,EAAIR,KAAKS,SAEzEH,EAAcI,OAEd,IAAMC,EAAkBL,EAAcC,KAAI,SAACC,GACzC,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAASF,aAAaU,OAAQD,IAEhD,GAAGJ,IAAQH,EAASF,aAAaS,GAAGZ,KAAKS,MAEvC,OAAOJ,EAASF,aAAaS,MAInCE,QAAQC,IAAI,yBAGZV,EAASF,aAAeQ,EAExB,EAAKK,SAASX,I,EAGhBY,kBAAoB,WAElB,IAAMZ,EAAQ,eAAO,EAAKH,OAGpBgB,EAAcb,EAASF,aAAagB,QAAO,SAACC,GAChD,GAAiC,kBAA9BA,EAASC,SAASC,QAEnB,OAAOF,KAKXf,EAASF,aAAee,EAExBJ,QAAQC,IAAI,wBAEZ,EAAKC,SAASX,I,uDAjDhB,WACC,IAAD,OCPSkB,IAAMC,IAAI,yCDShBC,MAAK,SAACC,GAAD,OAAS,EAAKV,SAAS,CAACb,aAAcuB,EAAIC,KAAKC,e,oBAiDvD,WACE,OACE,qCAEE,cAAC,EAAD,CAAQ7B,QAAS8B,KAAKzB,aAAcJ,KAAK,iBAEzC,cAAC,EAAD,CAAQD,QAAS8B,KAAKZ,kBAAmBjB,KAAK,iBAI7C6B,KAAK3B,MAAMC,aAAaI,KAAI,SAACa,EAAUU,GACtC,OAAO,sBAAKC,UAAU,OAAf,UACL,6BAAKX,EAASpB,KAAKS,MAAQ,IAAMW,EAASpB,KAAKgC,OAC/C,qBAAKC,IAAKb,EAASc,QAAQC,MAAOC,IAAG,UAAKhB,EAASpB,KAAKS,MAAnB,sBACrC,8BAAIW,EAASC,SAASgB,KAAtB,KAA8BjB,EAASC,SAASC,WAChD,4BAAIF,EAASkB,UAJmBR,a,GApEpBS,aESTC,MAVf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,2CACA,uBACA,cAAC,EAAD,Q,MCFNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.579779f8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Button(props) {\n  return (\n    <>\n      <button onClick={props.onClick}>\n        {props.name}\n      </button>\n    </>\n  );\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport Button from '../components/Button';\nimport getRandomUser from \"../utils/API\";\n\nclass Employees extends Component {\n  state = {\n    employeeList : []\n  }\n\n  componentDidMount()\n  {\n    getRandomUser()\n    .then((res) => this.setState({employeeList: res.data.results}));\n  }\n\n  onSortByName = () =>\n  {\n    // Make a new state.\n    const newState = {...this.state};\n    // Map the list of employees into a new list of just first names.\n    const employeeNames = newState.employeeList.map((emp)=> {return emp.name.first});\n    // Sort the new list of first names.\n    employeeNames.sort();\n    // Compare sorted list to existing list and return matches into a new array.\n    const sortedEmployees = employeeNames.map((emp) => {\n      for (let i = 0; i < newState.employeeList.length; i++)\n      {\n        if(emp === newState.employeeList[i].name.first)\n        {\n          return newState.employeeList[i];\n        }\n      }\n    });\n    console.log(\"Sorted by first name.\");\n\n    // Assign sorted full list to new state.\n    newState.employeeList = sortedEmployees;\n    // Set new state.\n    this.setState(newState);\n  }\n\n  onFilterByCountry = () => {\n    // Make a new state.\n    const newState = {...this.state};\n\n    // Filter existing array to new array only containing people from US.\n    const USEmployees = newState.employeeList.filter((employee)=> {\n      if(employee.location.country === 'United States')\n      {\n        return employee;\n      }\n    });\n\n    // Set new list to new state.\n    newState.employeeList = USEmployees;\n\n    console.log(\"Filtered by country.\");\n    // Set new state.\n    this.setState(newState);\n  }\n\n  render() {\n    return (\n      <>\n        {/* Sort by name button */}\n        <Button onClick={this.onSortByName} name=\"Sort By Name\" />\n        {/* Filter by country */}\n        <Button onClick={this.onFilterByCountry} name=\"Filter By US\" />\n\n\n        {/* Display all the employees in the array. */}\n        {this.state.employeeList.map((employee, index) => {\n          return <div className='mb-5' key={index}>\n            <h1>{employee.name.first + \" \" + employee.name.last}</h1>\n            <img src={employee.picture.large} alt={`${employee.name.first} profile picture`} />\n            <p>{employee.location.city}, {employee.location.country}</p>\n            <p>{employee.email}</p>\n          </div>\n          }\n        )}\n      </>\n    );\n  }\n}\n\nexport default Employees;\n","import axios from 'axios';\n\nexport default function getRandomUser () {\n    return axios.get(\"https://randomuser.me/api/?results=20\");\n  };\n","import './App.css';\nimport Employees from './pages/Employees';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Employees</h1>\n      <hr/>\n      <Employees/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}